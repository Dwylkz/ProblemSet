#define M 100005		//最大边数
#define N 1550			//最大点数

struct edge{
	int v, w, nxt;
}e[M];

int p[N], cnt, pre[N], cur[N], gap[N], dis[N]; 

void init_sap ()
{
	cnt = 0;
	memset (p, -1, sizeof(p));
}

void addedge_sap (int u, int v, int w)
{
	e[cnt].v = v, e[cnt].w = w, e[cnt].nxt = p[u], p[u] = cnt++;
	e[cnt].v = u, e[cnt].w = 0, e[cnt].nxt = p[v], p[v] = cnt++;
}

int sap (int s, int t, int n)
{
	int i, u, v, w, maxflow = 0, mins = -1; 

	for (i = 0; i <= n; i++) cur[i] = p[i];
	memset (gap, 0, sizeof(gap));
	memset (dis, 0, sizeof(dis));
	gap[0] = n;
	u = pre[s] = s;

	while (dis[s] < n)
	{
loop:
		for (int &ee = cur[u]; ee != -1; ee = e[ee].nxt)
		{
			v = e[ee].v;
			w = e[ee].w;





			if (w > 0 && dis[u] == dis[v] + 1)
			{
				if (mins == -1 || mins > w) mins = w;
				pre[v] = u;
				u = v;
				if (v == t)
				{
					maxflow += mins;
					for (u = pre[u]; v != s; v = u, u = pre[u])
					{
						e[ cur[u] ].w -= mins;
						e[ cur[u]^1 ].w += mins;
					}
					mins = -1;
				}
				goto loop;
			}
		}
		int mindis = n;
		for (i = p[u]; i != -1; i = e[i].nxt)
		{
			v = e[i].v;
			if (e[i].w > 0 && dis[v] < mindis)
				cur[u] = i, mindis = dis[v];
		}
		if (--gap[dis[u]] == 0)
			break;
		gap[dis[u] = mindis + 1]++;
		u = pre[u];
	}
	return maxflow;
}
