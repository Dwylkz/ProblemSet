#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <string>
#include <cmath>
#include <map>
#include <vector>
using namespace std;
#define Rep(c, a, b) for (int c = a; c < b; c++)
#define Nre(c, a, b) for (int c = a; c > b; c--)
#define Clr(c, a, b) fill(c, c + a, b)
#define MS(c, a) memset(c, a, sizeof(c))
#define LLU long long
#define MAXN (110)
#define MAXT (4400)
#define INFI 0x7fffffff
#define SHIFT (0)

struct Coor
{
    double x, y, r;
    int cou, cov;
    bool con[MAXN];
} co[MAXN];

double dis(Coor a, Coor b)
{
    return (a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y);
}

int main()
{
#if 1
    freopen("test.txt", "rt", stdin);
#endif
    int n, maxi, ans;

    while (~scanf("%d", &n))
    {
        Rep(i, 0, n)
        {
            Clr(co[i].con, n, 0);
            co[i].cou = co[i].cov = 0;
            scanf("%lf%lf%lf", &co[i].x, &co[i].y, &co[i].r);
        }
        Rep(i, 0, n) Rep(j, 0, n)
            if (dis(co[i], co[j]) <= co[i].r * co[i].r)
            {
                co[j].cov++;
                co[i].con[j] = 1;
                co[i].cou++;
            }
        ans = 0;
        while (true)
        {
            maxi = 0;
            Rep(i, 1, n)
                if (co[i].cou == co[maxi].cou && co[i].cov < co[maxi].cov)
                    maxi = i;
                else if (co[i].cou > co[maxi].cou)
                    maxi = i;
            if (!co[maxi].cou) break;
            Rep(i, 0, n)
                if (co[maxi].con[i])
                {
                    co[i].cov--;
                    Rep(j, 0, n)
                        if (co[j].con[i])
                        {
                            co[j].con[i] = 0;
                            co[j].cou--;
                        }
                }
            ans++;
        }
        #if 1
        #endif
        printf("%d\n", ans);
    }

    return 0;
}
