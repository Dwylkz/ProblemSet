!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	main.cpp	/^	double A, B, C;$/;"	m	struct:Seg	file:
AB	main.cpp	/^	typedef bool AB[MAXN];$/;"	t	namespace:Dwylkz	file:
AD	main.cpp	/^	typedef double AD[MAXN];$/;"	t	namespace:Dwylkz	file:
AI	main.cpp	/^	typedef int AI[MAXN];$/;"	t	namespace:Dwylkz	file:
ALD	main.cpp	/^	typedef LD ALD[MAXN];$/;"	t	namespace:Dwylkz	file:
ALL	main.cpp	/^	typedef LL ALL[MAXN];$/;"	t	namespace:Dwylkz	file:
B	main.cpp	/^	double A, B, C;$/;"	m	struct:Seg	file:
C	main.cpp	/^	double A, B, C;$/;"	m	struct:Seg	file:
Cir	main.cpp	/^	Cir(Vec _o = _Vec, double _r = 0){$/;"	f	struct:Cir
Cir	main.cpp	/^struct Cir{$/;"	s	file:
Dwylkz	main.cpp	/^namespace Dwylkz{$/;"	n	file:
EPS	main.cpp	/^	const double EPS = 1e-8;$/;"	m	namespace:Dwylkz	file:
FK	main.cpp	40;"	d	file:
INFI	main.cpp	/^	const int INFI = ~0u >> 1;$/;"	m	namespace:Dwylkz	file:
INFLL	main.cpp	/^	const LL INFLL = ~0uLL >> 1;$/;"	m	namespace:Dwylkz	file:
LD	main.cpp	/^	typedef long double LD;$/;"	t	namespace:Dwylkz	file:
LL	main.cpp	/^	typedef long long LL;$/;"	t	namespace:Dwylkz	file:
MAXN	main.cpp	/^	const int MAXN = 505;$/;"	m	namespace:Dwylkz	file:
MOD	main.cpp	/^	const int MOD = 1e9 + 7;$/;"	m	namespace:Dwylkz	file:
MS	main.cpp	37;"	d	file:
Nre	main.cpp	39;"	d	file:
Rep	main.cpp	38;"	d	file:
Seg	main.cpp	/^	Seg(Vec _a = _Vec, Vec _b = _Vec){$/;"	f	struct:Seg
Seg	main.cpp	/^struct Seg{$/;"	s	file:
UI	main.cpp	/^	typedef unsigned int UI;$/;"	t	namespace:Dwylkz	file:
VI	main.cpp	/^	typedef vector<int> VI;$/;"	t	namespace:Dwylkz	file:
Vec	main.cpp	/^	Vec(double _x = 0, double _y = 0){$/;"	f	struct:Vec
Vec	main.cpp	/^struct Vec{$/;"	s	file:
_Cir	main.cpp	/^} _Cir;$/;"	v	typeref:struct:Cir
_Seg	main.cpp	/^} _Seg;$/;"	v	typeref:struct:Seg
_Vec	main.cpp	/^} _Vec;$/;"	v	typeref:struct:Vec
a	main.cpp	/^	Vec a, b;$/;"	m	struct:Seg	file:
b	main.cpp	/^	Vec a, b;$/;"	m	struct:Seg	file:
inc	main.cpp	/^	bool inc(Vec &o){$/;"	f	struct:Seg
main	main.cpp	/^int main(){$/;"	f
o	main.cpp	/^	Vec o;$/;"	m	struct:Cir	file:
operator &	main.cpp	/^	friend Vec operator & (Seg &p, Seg &q){$/;"	f	struct:Seg
operator |	main.cpp	/^	friend bool operator | (Seg &p, Seg &q){$/;"	f	struct:Seg
r	main.cpp	/^	double r;$/;"	m	struct:Cir	file:
x	main.cpp	/^	double x, y;$/;"	m	struct:Vec	file:
y	main.cpp	/^	double x, y;$/;"	m	struct:Vec	file:
